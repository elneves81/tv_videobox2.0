import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Alert,
} from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import { SafeAreaView } from 'react-native-safe-area-context';
import TVButton from '../components/TVButton';

interface SettingsScreenProps {
  navigation: any;
}

export default function SettingsScreen({ navigation }: SettingsScreenProps) {
  const handleKioskMode = () => {
    Alert.alert(
      'üè• Modo Autom√°tico',
      'Ativar modo autom√°tico para reprodu√ß√£o cont√≠nua?\n\n‚Ä¢ V√≠deos rodando automaticamente\n‚Ä¢ Sem intera√ß√£o do usu√°rio\n‚Ä¢ Ideal para TVs dos postos',
      [
        { text: 'Cancelar', style: 'cancel' },
        { 
          text: 'Ativar', 
          onPress: () => navigation.navigate('Kiosk'),
          style: 'default'
        }
      ]
    );
  };

  const handleManualMode = () => {
    Alert.alert(
      'üéÆ Modo Manual',
      'Este √© o modo com navega√ß√£o manual.\n\n‚Ä¢ Sele√ß√£o de categorias\n‚Ä¢ Controle de reprodu√ß√£o\n‚Ä¢ Ideal para configura√ß√£o e testes',
      [{ text: 'OK' }]
    );
  };

  const handleSyncContent = () => {
    Alert.alert(
      'üîÑ Sincronizar Conte√∫do',
      'Funcionalidade em desenvolvimento.\n\nEsta op√ß√£o ir√°:\n‚Ä¢ Baixar novos v√≠deos do servidor\n‚Ä¢ Atualizar playlist automaticamente\n‚Ä¢ Usar a rede MPLS da Prefeitura',
      [{ text: 'OK' }]
    );
  };

  return (
    <LinearGradient
      colors={['#0f0f23', '#1a1a2e', '#16213e']}
      style={styles.container}
    >
      <SafeAreaView style={styles.safeArea}>
        {/* Header */}
        <View style={styles.header}>
          <TouchableOpacity
            style={styles.backButton}
            onPress={() => navigation.goBack()}
          >
            <Text style={styles.backButtonText}>‚Üê Voltar</Text>
          </TouchableOpacity>
          <Text style={styles.title}>‚öôÔ∏è Configura√ß√µes</Text>
          <Text style={styles.subtitle}>Sistema UBS Guarapuava</Text>
        </View>

        {/* Op√ß√µes de Configura√ß√£o */}
        <View style={styles.optionsContainer}>
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>üéÆ Modos de Opera√ß√£o</Text>
            
            <TouchableOpacity style={styles.option} onPress={handleKioskMode}>
              <View style={styles.optionContent}>
                <Text style={styles.optionTitle}>üè• Modo Autom√°tico</Text>
                <Text style={styles.optionDescription}>
                  Reprodu√ß√£o cont√≠nua para TVs dos postos de sa√∫de
                </Text>
              </View>
              <Text style={styles.arrow}>‚Üí</Text>
            </TouchableOpacity>

            <TouchableOpacity style={styles.option} onPress={handleManualMode}>
              <View style={styles.optionContent}>
                <Text style={styles.optionTitle}>üéÆ Modo Manual</Text>
                <Text style={styles.optionDescription}>
                  Navega√ß√£o manual para configura√ß√£o e testes
                </Text>
              </View>
              <Text style={styles.arrow}>‚Üí</Text>
            </TouchableOpacity>
          </View>

          <View style={styles.section}>
            <Text style={styles.sectionTitle}>üîÑ Gest√£o de Conte√∫do</Text>
            
            <TouchableOpacity style={styles.option} onPress={handleSyncContent}>
              <View style={styles.optionContent}>
                <Text style={styles.optionTitle}>üì° Sincronizar Conte√∫do</Text>
                <Text style={styles.optionDescription}>
                  Atualizar v√≠deos via rede MPLS da Prefeitura
                </Text>
              </View>
              <Text style={styles.arrow}>‚Üí</Text>
            </TouchableOpacity>

            <TouchableOpacity style={styles.option}>
              <View style={styles.optionContent}>
                <Text style={styles.optionTitle}>üìä Status da Rede</Text>
                <Text style={styles.optionDescription}>
                  Verificar conex√£o com servidor central
                </Text>
              </View>
              <Text style={styles.arrow}>‚Üí</Text>
            </TouchableOpacity>
          </View>

          <View style={styles.section}>
            <Text style={styles.sectionTitle}>‚ÑπÔ∏è Informa√ß√µes do Sistema</Text>
            
            <View style={styles.infoCard}>
              <Text style={styles.infoTitle}>üìç Unidade de Sa√∫de</Text>
              <Text style={styles.infoText}>Configurar via painel administrativo</Text>
              
              <Text style={styles.infoTitle}>üîó Rede MPLS</Text>
              <Text style={styles.infoText}>Conectado √† rede da Prefeitura</Text>
              
              <Text style={styles.infoTitle}>üì± Vers√£o do App</Text>
              <Text style={styles.infoText}>UBS Guarapuava v1.0.0</Text>
            </View>
          </View>
        </View>
      </SafeAreaView>
    </LinearGradient>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  safeArea: {
    flex: 1,
    paddingHorizontal: 40,
  },
  header: {
    paddingVertical: 30,
    alignItems: 'center',
  },
  backButton: {
    position: 'absolute',
    left: 0,
    top: 30,
    paddingVertical: 12,
    paddingHorizontal: 20,
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    borderRadius: 8,
  },
  backButtonText: {
    color: '#ffffff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  title: {
    fontSize: 36,
    fontWeight: 'bold',
    color: '#ffffff',
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 16,
    color: '#cccccc',
    marginTop: 8,
  },
  optionsContainer: {
    flex: 1,
  },
  section: {
    marginBottom: 40,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#ffffff',
    marginBottom: 20,
  },
  option: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: 'rgba(255, 255, 255, 0.05)',
    borderRadius: 12,
    padding: 20,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: 'rgba(255, 255, 255, 0.1)',
  },
  optionContent: {
    flex: 1,
  },
  optionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#ffffff',
    marginBottom: 4,
  },
  optionDescription: {
    fontSize: 14,
    color: '#cccccc',
  },
  arrow: {
    fontSize: 20,
    color: '#00d4ff',
    fontWeight: 'bold',
  },
  infoCard: {
    backgroundColor: 'rgba(255, 255, 255, 0.05)',
    borderRadius: 12,
    padding: 20,
    borderWidth: 1,
    borderColor: 'rgba(255, 255, 255, 0.1)',
  },
  infoTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#00d4ff',
    marginTop: 12,
    marginBottom: 4,
  },
  infoText: {
    fontSize: 14,
    color: '#cccccc',
  },
});
