name: Neon Database Workflow

on:
  pull_request:
    types: [opened, synchronize, closed]
  push:
    branches:
      - main

jobs:
  database-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          api_key: ${{ secrets.NEON_API_KEY }}
          branch_name: preview/${{ github.event.number }}
          parent: main

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url }}

      - name: Run Prisma migrations
        run: npx prisma db push --force-reset
        env:
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url }}

      - name: Seed database
        run: npm run db:seed
        env:
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸŒ± **Preview Database Created**
              
              Your database branch has been created for this PR:
              - **Branch**: \`preview/${{ github.event.number }}\`
              - **Database URL**: Available in the action logs
              
              The database has been seeded with initial data for testing.`
            })

  cleanup-database:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          api_key: ${{ secrets.NEON_API_KEY }}
          branch: preview/${{ github.event.number }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ§¹ **Preview Database Cleaned Up**
              
              The database branch \`preview/${{ github.event.number }}\` has been deleted as the PR was closed.`
            })

  deploy-production:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy Prisma migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Seed production database (if needed)
        run: npm run db:seed
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        continue-on-error: true
